# -*- coding: utf-8 -*-
"""2019-1-60-034_Lab01_exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CQW48zir0Qg-52vd8qBupTF8ErleXYC_

1. Given two integer numbers, write a Python program to return their product. If the product is greater
than 1000, then return their sum. Read inputs from the user.
"""

def num(x,y):
    if x*y > 1000:
        print("sum : ")
        return x+y
    else:
        print("Product: ")
        return x*y
    
x = int(input('input num x: '))
y = int(input('input num y: '))

print(num(x,y))

"""2. Write a Python program to find the area and perimeter of a circle. Read inputs from the user."""

import math

r = float(input("Input Radius: "))
area = math.pi*(r*r)
print("Area of Circle: ",area)
perimeter = 2*math.pi*r
print("Perimeter of Circle: ",perimeter)

"""3. Write a Python program to calculate the compound interest based on the given formula. Read inputs
from the user.
A = P * (1 + R/100)^T
where P is the principle amount, R is the interest rate and T is time (in years).

Define a function named as compound_interest_< your-student-id > in your program.
"""

def compound_interest_2019_1_60_034(P,R,T):
    return P * ((1 + R/100)**T)

P = int(input("input principle amount:  "))
R = float(input("input interest rate: "))
T = int(input("input time(in years): "))
A = compound_interest_2019_1_60_034(P,R,T)
print("Compound interest : ",A)

"""4. Given a positive integer N (read from the user), write a Python program to calculate the value of the
following series.

1^2 + 2^2 + 3^2 + 4^2 ..... + N^2
"""

def sum_series(N):
    return (N*(N+1)*(2*N+1))/6
N = int(input("input number : "))

print("sum of series: ",sum_series(N))

"""5. Given a positive integer N (read from the user), write a Python program to check if the number is
prime or not. Define a function named as prime_find_< your-student-id > in your program.
"""

def prime_find_2019_1_60_034(N):
  if N> 1:  
        for i in range(2,N):  
            if (N % i) == 0: 
              print("Not a prime number")
              break
        else:
            print("Prime number")
  else:
      print("Not a prime number")
N = int(input("input number: "))
prime_find_2019_1_60_034(N)

"""6. Given a positive integer n (read from the user), write a Python program to find the n-th Fibonacci
number based on the following assumptions.
Fn = Fn-1 + Fn-2 where F0 = 0 and F1 = 1
"""

def fibonacci(n):
    if n<=0:
        return 0
    elif n==1:
        return 1    
    else:
        return fibonacci(n-1)+fibonacci(n-2)
n=int(input("input number: "))
print(n,"th fibonacci number is : ",fibonacci(n))

"""7. Given a list of numbers (hardcoded in the program), write a Python program to calculate the sum of
the list. Do not use any built-in function.
"""

list = [12,1,4,15,3,8]
def count_sum(list):
    count=0 
    for i in list:
        count+=i   
    return count
print("Sum: ", count_sum(list))

"""8. Given a list of numbers (hardcoded in the program), write a Python program to calculate the sum of
the even-indexed elements in the list.
"""

list = [12,1,4,15,3,8]
def count_sum(list):
    count=0 
    for i in range(len(list)):
      if i%2==0:
        count+=list[i]   
    return count
print("Sum: ", count_sum(list))

"""9. Given a list of numbers (hardcoded in the program), write a Python program to find the largest and
smallest element of the list. Define two functions largest_number_< your-student-id > and
smallest_number_< your-student-id > in your program. Do not use any built-in function.
"""

list = [12,1,4,15,3,8]
def largest_number_2019_1_60_34(list):
    max = -99999
    for i in list:
        if i > max:
            max=i
    return max
def smallest_number_2019_1_60_034(list):
    min = 99999
    for i in list:
        if i < min:
            min = i
    return min
print("largest element: ",largest_number_2019_1_60_34(list), "And Smallest element: ", smallest_number_2019_1_60_034(list))

"""10. Given a list of numbers (hardcoded in the program), write a Python program to find the second
largest element of the list.
"""

list = [12,1,4,15,3,8]
list.sort()
print("Second largest element: ", list[len(list)-2])

"""11. Given a string, display only those characters which are present at an even index number. Read inputs
from the user.
"""

str = input("input string : ")
print("even index element : ")
for i in range(len(str)):
    if i%2==0:
        print(str[i] ,end="")

"""12. Given a string and an integer number n, remove characters from a string starting from zero up to n
and return a new string. N must be less than the length of the string. Read inputs from the user. Do
not use any built-in function.
"""

str = input("input string: ")
N = int(input("input integer = "))
str1 = ""
i=0
for i in range(len(str)):
    if i>=N:
        str1=str1+str[i]
print("new string : ",str1)

"""13. Given a string, find the count of the substring “CSE303” appeared in the given string. Do not use any
built-in function.
"""

str = 'Statistics for Data Science course code CSE303'
substr="CSE303"
def count_substr(str,substr):
    count=0
    for i in str.split():
        if i==substr:
            count+=1
    return count
print("count of substring CSE303 appeared: ",count_substr(str, substr))

"""14. Given a string, write a python program to check if it is palindrome or not. Define a function named
palindrome_checker_< your-student-id > in your program.
"""

str = "meme"
def palindrome_checker_2019_1_60_034(str):
    s = ""
    for i in str:
        s = i + s
    print(s)
    if str==s:
        print("yes, Palindrome")
    else:
        print("Not a palindrome")
palindrome_checker_2019_1_60_034(str)

"""15. Given a two list of numbers (hardcoded in the program), create a new list such that new list should
contain only odd numbers from the first list and even numbers from the second list.
"""

list1=[12,1,4,15,3,8]
list2=[13,2,5,14,7,9]
even=[]
odd=[]
list3=[]
def new_list(list1,list2):
    for i in list1:
        if i%2!=0:
            odd.append(i)
            list3.append(i)   
    for i in list2:
        if i%2==0:
            even.append(i)
            list3.append(i)    
    print("New List: ",list3)     
new_list(list1,list2)